pipeline {
    agent any
    
    environment {
        GITHUB_REPO = 'https://github.com/nova-mk3/frontend'
        GITHUB_CREDENTIALS_ID = 'github_access_token_frontend'  // GitHub 자격 증명 ID
    }
    
    stages {
        stage('GitHub Clone') {
            steps {
                script {
                    echo "🔄 Cloning repository..."
                    sh 'rm -rf frontend || true'  // 기존 폴더 삭제 (에러 방지)
                    
                    // ✅ frontend 디렉토리에서 Git Clone 실행
                    dir('frontend') {  
                        git branch: 'main', credentialsId: env.GITHUB_CREDENTIALS_ID, url: env.GITHUB_REPO
                    }
                    echo "✅ Git Clone 완료!"
                }
            }
        }

        stage('Cleanup') {
            steps {
                script {
                    def composeFile = "frontend/docker-compose.yml"
                    if (fileExists(composeFile)) {  
                        echo "🧹 Cleaning up old Docker containers..."
                        dir('frontend') {
                            sh '''
                            docker-compose down --rmi all --volumes --remove-orphans || true
                            '''
                        }
                        echo "✅ Cleanup 완료!"
                    } else {
                        echo "⚠️ frontend/docker-compose.yml not found. Skipping cleanup."
                    }
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    def composeFile = "frontend/docker-compose.yml"
                    if (fileExists(composeFile)) {  
                        echo "🚀 Deploying Docker containers..."
                        dir('frontend') 
                            sh '''
                            docker-compose up -d --build || (echo "❌ Deployment Failed!" && exit 1)
                            '''
                        }
                        echo "✅ Deployment 완료!"
                    } else {
                        error "❌ docker-compose.yml not found! Stopping pipeline."
                    }
                }
            }
        }
    }
    
    post {
        success {
            echo "🎉 Deployment 성공! 🚀"
        }
        failure {
            echo "❌ Deployment 실패. Logs 확인 요망."
        }
    }
}
